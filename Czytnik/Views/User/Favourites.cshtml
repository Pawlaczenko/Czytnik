@{
    ViewData["Title"] = "Twój profil - Ulubione";
}

<section class="wrapper user-favourites">
    <h2 class="heading-line heading-line--both">Ulubione</h2>
    <p class="small-paragraph">Lista twoich ulubionych książek</p>
    <div class="user-container">
        <div class="sorting-header user-favourites__sort">
            <div class="sorting-header__counter">
                Znaleziono 3 zamówień
            </div>
            <div class="sorting-header__sort">
                <label for="sort" class="sorting-header__sort-label">Sortuj według: </label>
                <div class="sorting-header__sort-select-wrapper">
                    <select name="Sort" id="sort" class="sorting-header__sort-select js-sorting-select">
                        <option value="date-down">Od najnowszych</option>
                        <option value="date-up">Od najstarszych</option>
                    </select>
                    <svg class="sorting-header__sort-chevron" viewBox="0 0 32 32">
                        <use xlink:href="/assets/svg/sprite.svg#icon-chevron-down"></use>
                    </svg>
                </div>
            </div>
        </div>
        <div class="user-favourites__container">
            @*@if (Model.books.Count == 0)
            {
                <p class="search__result-none">Brak wyników :(</p>
            }
            @foreach (BooksSearchViewModel book in Model.books)
            {
                @await Component.InvokeAsync("BookItem", new { element = book })
            }*@
        </div>
    </div>
    <button class="button button--secondary user-favourites__button">Załaduj więcej...</button>
</section>